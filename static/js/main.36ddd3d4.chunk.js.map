{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","App","useState","visibleGoods","setVisibleGoods","isAlphabetActive","setAlphabetActive","isLengthActive","setLengthActive","isReverseActive","setReverseActive","isSorted","setIsSorted","className","type","cn","onClick","sort","good1","good2","localeCompare","length","reverse","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAMaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAM,WACjB,MAAwCC,mBAASF,GAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACA,EAA8CF,oBAAS,GAAvD,mBAAOG,EAAP,KAAyBC,EAAzB,KACA,EAA0CJ,oBAAS,GAAnD,mBAAOK,EAAP,KAAuBC,EAAvB,KACA,EAA4CN,oBAAS,GAArD,mBAAOO,EAAP,KAAwBC,EAAxB,KACA,EAAgCR,oBAAS,GAAzC,mBAAOS,EAAP,KAAiBC,EAAjB,KAoCA,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,iBAAkB,CAAE,WAAYV,IAC9CW,QAxCe,WACrBZ,EACE,YAAID,GAAcc,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,OAE/DP,GAAY,GACZN,GAAkB,GAClBE,GAAgB,GAChBE,GAAiB,IA8Bb,iCAQA,wBACEI,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CAAE,WAAYR,IACjDS,QAtCa,WACnBZ,EACE,YAAID,GAAcc,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMG,OAASF,EAAME,WAEhET,GAAY,GACZJ,GAAgB,GAChBF,GAAkB,GAClBI,GAAiB,IA4Bb,4BAQA,wBACEI,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CAAE,WAAYN,IACjDO,QApCa,WACnBZ,EAAgB,YAAID,GAAcmB,WAClCV,GAAY,GACZF,GAAiB,IA8Bb,qBAQCC,GACD,wBACEG,KAAK,SACLD,UAAU,4BACVG,QAvCM,WACZZ,EAAgBJ,GAChBM,GAAkB,GAClBE,GAAgB,GAChBE,GAAiB,GACjBE,GAAY,IA+BR,sBAUF,6BACGT,EAAaoB,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YCjGlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.36ddd3d4.chunk.js","sourcesContent":["import { useState } from 'react';\nimport cn from 'classnames';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App = () => {\n  const [visibleGoods, setVisibleGoods] = useState(goodsFromServer);\n  const [isAlphabetActive, setAlphabetActive] = useState(true);\n  const [isLengthActive, setLengthActive] = useState(true);\n  const [isReverseActive, setReverseActive] = useState(true);\n  const [isSorted, setIsSorted] = useState(false);\n\n  const sortByAlphabet = () => {\n    setVisibleGoods(\n      [...visibleGoods].sort((good1, good2) => good1.localeCompare(good2)),\n    );\n    setIsSorted(true);\n    setAlphabetActive(false);\n    setLengthActive(true);\n    setReverseActive(true);\n  };\n\n  const sortByLength = () => {\n    setVisibleGoods(\n      [...visibleGoods].sort((good1, good2) => good1.length - good2.length),\n    );\n    setIsSorted(true);\n    setLengthActive(false);\n    setAlphabetActive(true);\n    setReverseActive(true);\n  };\n\n  const reverseGoods = () => {\n    setVisibleGoods([...visibleGoods].reverse());\n    setIsSorted(true);\n    setReverseActive(false);\n  };\n\n  const reset = () => {\n    setVisibleGoods(goodsFromServer);\n    setAlphabetActive(true);\n    setLengthActive(true);\n    setReverseActive(true);\n    setIsSorted(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info', { 'is-light': isAlphabetActive })}\n          onClick={sortByAlphabet}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-success', { 'is-light': isLengthActive })}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning', { 'is-light': isReverseActive })}\n          onClick={reverseGoods}\n        >\n          Reverse\n        </button>\n\n        {isSorted && (\n        <button\n          type=\"button\"\n          className=\"button is-danger is-light\"\n          onClick={reset}\n        >\n          Reset\n        </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li data-cy=\"Good\" key={good}>{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}